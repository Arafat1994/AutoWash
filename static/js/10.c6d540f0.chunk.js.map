{"version":3,"sources":["Components/ContactInfoComponent/ContactComponent.js","Pages/ContactPage/ContactPageComponent.js","Components/Titleofanycomponent/TitleofComponent.js","DynmaicComponent/pageHeader/pageHeader.js"],"names":["ContactComponent","props","UseValiationHook","Contactfullname","ContactEmail","ContactSubject","ContactMessage","Values","Formerrors","Issubmit","setIssubmit","ErrorCatch","SendData","handlechange","useLayoutEffect","useEffect","Object","keys","ContactErr","length","returneddiv","data","ContactData","map","res","id","icon","header","details","className","dirction","title","name","type","placeholder","required","inputtype","FormInputComponent","value","onChange","errormessage","border","MainButtonComponent","onclick","disabled","child","font","back","hoverfont","hoverback","ContactPageComponent","TitleOfComponent","margintop","style","textAlign","marginTop","PagerHeader","PathName","useLocation","pathname","slice"],"mappings":"6PAUe,SAASA,EAAiBC,GAGrC,IAUA,EAA4FC,YAFzE,CAAEC,gBAAiB,GAAIC,aAAa,GAAIC,eAAgB,GAAIC,eAAgB,IACnF,oBACJC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,YAAeC,EAArD,EAAqDA,WAAYC,EAAjE,EAAiEA,SAAUC,EAA3E,EAA2EA,aAG3EC,2BAAgB,WACZH,MAED,CAACJ,EAAOJ,gBAAiBI,EAAOH,aAAcG,EAAOF,eAAgBE,EAAOD,iBAE/ES,qBAAU,WAE2C,IAA9CC,OAAOC,KAAKT,EAAWU,YAAYC,OAAiBT,GAAY,GAC7DA,GAAY,MAItB,IAEMU,EAFeC,EAAK,GAAGC,YAEIC,KAAI,SAACC,GAClC,IAAQC,EAA8BD,EAA9BC,GAAIC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,QAC1B,OACI,sBAAcC,UAAU,iBAAxB,UACI,cAAC,IAAD,CAAiBA,UAAU,OAAOH,KAAMA,IACxC,sBAAKG,UAAU,OAAf,UACI,mCAAMF,EAAN,SACA,kCAAKC,EAAL,cAJEH,MAWlB,OACI,sBAAKI,UAAU,mBAAf,UACI,cAAC,IAAD,CAAkBC,SAAS,SAASH,OAAO,2BAA2BI,MAAM,iBAC5E,sBAAKF,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,cAAyB,sDAAzB,QAEIT,KAGR,sBAAKS,UAAU,mBAAf,UAnDG,CACX,CAAEJ,GAAI,EAAGO,KAAM,kBAAmBC,KAAM,OAAQC,YAAa,WAAYC,UAAU,EAAMC,UAAW,WACpG,CAAEX,GAAI,EAAGO,KAAM,eAAgBC,KAAM,QAASC,YAAa,UAAWC,UAAU,EAAMC,UAAW,WACjG,CAAEX,GAAI,EAAGO,KAAM,iBAAkBC,KAAM,OAAQC,YAAa,UAAWC,UAAU,EAAMC,UAAW,WAClG,CAAEX,GAAI,EAAGO,KAAM,iBAAkBC,KAAM,OAAQC,YAAa,UAAWC,UAAU,EAAMC,UAAW,aAiD3Eb,KAAI,SAACC,GACR,OACI,cAACa,EAAA,EAAD,2BAAqCb,GAArC,IAA0Cc,MAAO/B,EAAOiB,EAAIQ,MAAOO,SAAU1B,EAAc2B,aAAchC,EAAWU,WAAWM,EAAIQ,MAAOS,OAAO,YAAxHjB,EAAIC,OASzC,cAACiB,EAAA,EAAD,CAAqBC,QAAS/B,EAAUgC,UAAWnC,EAAUoC,MAAM,gBAAgBC,KAAK,QAAQC,KAAK,UAAUC,UAAU,UAAUC,UAAU,qB,YC1ElJ,SAASC,IAEpB,OACI,sBAAKrB,UAAU,cAAf,UAEQ,cAAC,IAAD,IACA,cAAC,EAAD,S,gCCThB,wDAGe,SAASsB,EAAiBlD,GAErC,IAAO6B,EAA0C7B,EAA1C6B,SAAWsB,EAA+BnD,EAA/BmD,UAAYrB,EAAmB9B,EAAnB8B,MAAQJ,EAAW1B,EAAX0B,OAItC,OACI,sBAAKE,UAAU,iBAAiBwB,MAAO,CAACC,UAAUxB,EAAWyB,UAAUH,GAAvE,UACI,qBAAKvB,UAAU,QAAf,SACIE,IAEJ,qBAAKF,UAAU,cAAf,SACKF,S,gCCfjB,iEAGe,SAAS6B,EAAYvD,GAChC,IACMwD,EADUC,cACSC,SAASC,MAAM,GAIxC,OACI,sBAAK/B,UAAU,kBAAf,UACA,4BACK4B,IAEL,4CACiBA,U","file":"static/js/10.c6d540f0.chunk.js","sourcesContent":["import \"./ContactComponent.scss\";\r\nimport React, { useEffect, useLayoutEffect } from \"react\";\r\nimport TitleOfComponent from \"../Titleofanycomponent/TitleofComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FormInputComponent from \"../../DynmaicComponent/FormInputComponent/FormInputComponent\";\r\nimport MainButtonComponent from \"../../DynmaicComponent/AppointmentButtonComponent/MainButtonComponent\";\r\nimport data from './../../Assets/jsonFile/data.json'\r\nimport UseValiationHook from \"../../Hooks/CustomHookValidation\";\r\n\r\n\r\nexport default function ContactComponent(props) {\r\n\r\n\r\n    const inputs = [\r\n        { id: 0, name: \"Contactfullname\", type: \"text\", placeholder: 'FullName', required: true, inputtype: \"textbox\" },\r\n        { id: 1, name: \"ContactEmail\", type: \"email\", placeholder: ' Email ', required: true, inputtype: \"textbox\" },\r\n        { id: 2, name: \"ContactSubject\", type: \"text\", placeholder: \"Subject\", required: true, inputtype: \"textbox\" },\r\n        { id: 3, name: \"ContactMessage\", type: \"text\", placeholder: \"Message\", required: true, inputtype: \"textarea\" },\r\n\r\n    ];\r\n\r\n    const sentValues = { Contactfullname: \"\", ContactEmail:\"\", ContactSubject: \"\", ContactMessage: \"\" };\r\n    const url = \"messagesRequests\" ;\r\n    const { Values, Formerrors, Issubmit, setIssubmit ,  ErrorCatch, SendData, handlechange } = UseValiationHook(sentValues , url);\r\n    \r\n\r\n    useLayoutEffect(() => {\r\n        ErrorCatch() ; \r\n        //eslint-disable-next-line\r\n    }, [Values.Contactfullname, Values.ContactEmail, Values.ContactSubject, Values.ContactMessage])\r\n\r\n    useEffect(()=>{\r\n        //console.log(Formerrors.NewsErr);\r\n        if(Object.keys(Formerrors.ContactErr).length === 0 ) { setIssubmit(true) }\r\n        else{ setIssubmit(false) }\r\n    })\r\n\r\n\r\n    const returneddata = data[0].ContactData;\r\n\r\n    const returneddiv = returneddata.map((res) => {\r\n        const { id, icon, header, details } = res;\r\n        return (\r\n            <div key={id} className=\"contactelement\">\r\n                <FontAwesomeIcon className=\"icon\" icon={icon} />\r\n                <div className=\"text\">\r\n                    <p>  {header}   </p>\r\n                    <p> {details}   </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"ContactContainer\">\r\n            <TitleOfComponent dirction=\"center\" header=\" Contact For Any Query  \" title=\"Get In Touch\" />\r\n            <div className=\"ContactDiv\">\r\n                <div className=\"leftContactSide\">\r\n                    <div className=\"header\"> <p> Quick Contact Info  </p>  </div>\r\n                    {\r\n                        returneddiv\r\n                    }\r\n                </div>\r\n                <div className=\"RightContactSide\">\r\n                    {\r\n                        inputs.map((res) => {\r\n                            return (\r\n                                <FormInputComponent key={res.id} {...res} value={Values[res.name]} onChange={handlechange} errormessage={Formerrors.ContactErr[res.name]} border=\"#202C45\" />\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        //console.log(Issubmit)\r\n                        //\r\n                    }\r\n\r\n                    <MainButtonComponent onclick={SendData} disabled={!Issubmit} child='Send Message ' font='white' back='#E81C2E' hoverfont=\"#E81C2E\" hoverback=\"#202C45\" />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ContactComponent from '../../Components/ContactInfoComponent/ContactComponent';\r\nimport PagerHeader from './../../DynmaicComponent/pageHeader/pageHeader';\r\nexport default function ContactPageComponent()\r\n{\r\n    return(\r\n        <div className='MainContact'> \r\n            \r\n                <PagerHeader/>\r\n                <ContactComponent />\r\n                \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './TitleofComponent.scss'\r\n\r\nexport default function TitleOfComponent(props){\r\n\r\n    const {dirction , margintop , title , header } = props ; \r\n\r\n    //document.documentElement.style.setProperty(\"--textalignele\" , props.dirction) ; \r\n    //console.log(props.dirction)\r\n    return(\r\n        <div className=\"componenttitle\" style={{textAlign:dirction , marginTop:margintop}}>\r\n            <div className=\"title\">\r\n               {title}\r\n            </div>  \r\n            <div className=\"titleHeader\">\r\n                {header}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React  from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport './PageHeader.scss'\r\nexport default function PagerHeader(props){\r\n    const location= useLocation();\r\n    const PathName =location.pathname.slice(1) \r\n    //console.log(location)\r\n\r\n    //console.log(typeof(location.pathname))\r\n    return(\r\n        <div className=\"HeaderContainer\"> \r\n        <p>\r\n            {PathName} \r\n        </p>\r\n        <p> \r\n            AutoWash / { PathName}\r\n        </p>\r\n        </div>\r\n    )\r\n\r\n}"],"sourceRoot":""}