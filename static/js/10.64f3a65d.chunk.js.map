{"version":3,"sources":["DynmaicComponent/DynamicModal/DynamicModal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","DynmaicComponent/FormInputComponent/FormInputComponent.js","Hooks/CustomHookValidation.js","DynmaicComponent/SocialmediaLinksComponent/SocialmedialinksComponent.js","Services/RegisterDataToApi.js","Components/FooterComponent/Footercomponent.js"],"names":["DynamicModal","header","message","closeModal","useEffect","document","body","style","overflowY","className","onclick","child","font","width","back","hoverfont","hoverback","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_objectWithoutProperties","source","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","sharedinputCss","css","border","Input","styled","input","attrs","focused","Textarea","textarea","FormInputComponent","id","errormessage","inputtype","onChnage","inputprops","useState","setFocused","handlefocus","e","onChange","onFocus","toString","UseValiationHook","sentValues","url","dispatch","useDispatch","users","useSelector","getUsersSelector","Values","setValues","ContactErr","NewsErr","SigninErr","RegisterErr","Formerrors","setFormErrors","Issubmit","setIssubmit","lastid","setLastId","Token","Math","floor","random","ErorrModal","setErrormModal","ValidationFun","values","errors","fullnameRegex","RegExp","subjectRegex","emailRegex","passwordRegex","Contactfullname","test","ContactEmail","ContactSubject","ContactMessage","NewsFullname","NewsEmail","LoginEmail","LoginPassword","RegFName","RegLName","RegEmail","RegPassword","RegConfirmPass","RegPhoneNumber","RegBirthday","RegNationality","RegAdress","RegCity","axios","get","then","res","data","FindidLastElement","LoginService","Error","User","filter","user","localStorage","setItem","JSON","stringify","userToken","GetFetchedUser","window","location","replace","closeModalFun","ErrorCatch","SendData","ErrorObj","InputEmail","val","find","console","log","EmailExist","baseURL","method","Number","alert","catch","err","handlechange","name","value","Socialmedia","div","top","SocialmedialinksComponent","returneddata","socialmediaLinks","returneddiv","map","icon","link","href","RegisterDataClass","dataFromUser","destinationUrl","ErrorObject","Users","lastId","ErrorStateFun","this","Message","dataSelector","createSelector","state","datareducer","datafun","Footercomponent","footerdata","FooterData","SocialmediaData","FooterDatadiv","SetFooterData","ErrorModal","SetErrorModal","useLayoutEffect","title","elements","result","iconClassName","spanClassName","spantext","type","placeholder","required","RegisterUserLetterData"],"mappings":"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","file":"static/js/10.64f3a65d.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport MainButtonComponent from '../AppointmentButtonComponent/MainButtonComponent';\r\nimport './DynamicModal.scss'\r\n\r\nexport default function DynamicModal({ header, message , closeModal  }) {\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflowY = \"hidden\"\r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <div className='modalContainer' >\r\n            <div className='modalMessage'>\r\n                <div className='modalElement'>\r\n\r\n                    <p className='header'>\r\n                        {header}\r\n                    </p>\r\n                    <p className='message'>\r\n                        {message}\r\n                    </p>\r\n\r\n                    <div className='buttons'>\r\n                        <MainButtonComponent onclick={closeModal} child=\"Okay\" font=\"white\" width=\"100px\" back=\"#E81C2E\" hoverfont=\"#E81C2E\" hoverback=\"white\" />   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import './FormInputComponent.scss'\r\nimport React, { useState } from 'react';\r\nimport  styled , {  css } from 'styled-components';\r\n\r\n\r\nconst sharedinputCss = css`\r\n border : ${props => props.border ? `1px solid ${props.border}` : '1px solid white'} ;\r\n color : ${props => props.border ? `${props.border}` : 'white'}  ; \r\n ::placeholder  { color:${props => props.border ? `${props.border}` : 'white'} ;  }\r\n`\r\n\r\nconst Input = styled.input.attrs(props => ( { \"data-focused\" : props.focused } ) )`\r\n    ${sharedinputCss} ;\r\n    height:40px;\r\n `\r\n\r\nconst Textarea = styled.textarea.attrs(props => ( { \"data-focused\" : props.focused } ) )`\r\n   ${sharedinputCss} ;\r\n   height:150px ; \r\n `;\r\n\r\nexport default function FormInputComponent(props) {\r\n    const { id, errormessage, inputtype, onChnage, ...inputprops } = props;\r\n    const [focused, setFocused] = useState(false);\r\n\r\n    const handlefocus=(e)=> { setFocused(true) }\r\n   \r\n   \r\n    return (\r\n        <div className='Formdiv'>\r\n            {inputtype === \"textbox\" ?\r\n                <Input className='forminput' onChange={onChnage} onFocus={handlefocus}    {...inputprops}    border={props.border}  focused={focused.toString()} /> :\r\n                <Textarea className='forminput' onChange={onChnage} onFocus={handlefocus} {...inputprops}    border={props.border}  focused={focused.toString()} />\r\n            }\r\n            <span className='errormessage'> {errormessage} </span>\r\n        </div>\r\n\r\n    )\r\n}","import axios from \"axios\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DynamicModal from \"../DynmaicComponent/DynamicModal/DynamicModal\";\r\nimport { GetFetchedUser } from \"../Redux/Actions/Actions\";\r\nimport { getUsersSelector } from \"../Selectors/userSelector\";\r\nimport { Modal } from \"./Modal\";\r\n\r\n\r\nexport default function UseValiationHook(sentValues, url) {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(getUsersSelector);\r\n    const [Values, setValues] = useState(sentValues);\r\n    const [Formerrors, setFormErrors] = useState({ ContactErr: {}, NewsErr: {}, SigninErr: {}, RegisterErr: {} });\r\n    const [Issubmit, setIssubmit] = useState(false);\r\n    const [lastid, setLastId] = useState();\r\n    const Token = Math.floor(Math.random() * 1514000) + 1;\r\n    const [ErorrModal, setErrormModal] = useState(\"\");\r\n    //const {EmailExist} = useCheckeEmailExistHook(); \r\n    /*\r\n    //this is another way to get data using useselectors \r\n    const { users } = useSelector(({ fetchusersreducer: { users } }) => {\r\n         //console.log(\"selector run \");\r\n         return ({ users })\r\n     }, shallowEqual);\r\n     */\r\n    const EmailExist = (InputEmail) => {\r\n        const val = users.find((user) => {\r\n            if (user.data.RegEmail === InputEmail) {\r\n                console.log(\"Email exist from func hook  \")\r\n                return true;\r\n            }\r\n            else {\r\n                console.log(\"Email doesnot Exist from func hook \")\r\n                return false;\r\n            }\r\n        })\r\n        console.log(val)\r\n        return val;\r\n    }\r\n\r\n    const ValidationFun = (values) => {\r\n        const errors = { ContactErr: {}, NewsErr: {}, SigninErr: {}, RegisterErr: {} };\r\n        const fullnameRegex = new RegExp(\"^[A-zA-Z0-9_ ]{3,16}$\");\r\n        const subjectRegex = new RegExp(\"^[A-zA-Z0-9_ ]{10,40}$\");\r\n        const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        const passwordRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");;\r\n\r\n\r\n        if (!values.Contactfullname) { errors.ContactErr.Contactfullname = \" Fullname required \" }\r\n        else if (!fullnameRegex.test(values.Contactfullname)) { errors.ContactErr.Contactfullname = \"fullname must have at least 3 chars and max 16 chars  \" }\r\n\r\n        if (!values.ContactEmail) { errors.ContactErr.ContactEmail = \" Email required \" }\r\n        else if (!emailRegex.test(values.ContactEmail)) { errors.ContactErr.ContactEmail = \"Please enter A valid email \" }\r\n\r\n        if (!values.ContactSubject) { errors.ContactErr.ContactSubject = \" Subject is required \" }\r\n        else if (!subjectRegex.test(values.ContactSubject)) { errors.ContactErr.ContactSubject = \" subject must be at least 10 chars and maximum 40  chars \" }\r\n\r\n        if (!values.ContactMessage) { errors.ContactErr.ContactMessage = \" Message  is required \" }\r\n\r\n        if (!values.NewsFullname) { errors.NewsErr.NewsFullname = \" Fullname required \" }\r\n        else if (!fullnameRegex.test(values.NewsFullname)) { errors.NewsErr.NewsFullname = \"fullname must have at least 3 chars and max 16 chars  \" }\r\n\r\n        if (!values.NewsEmail) { errors.NewsErr.NewsEmail = \"Email Required \" }\r\n        else if (!emailRegex.test(values.NewsEmail)) { errors.NewsErr.NewsEmail = \" please Enter A valid Email \" }\r\n        // LoginEmail:\"\" ,LoginPassword:\"\"\r\n        if (!values.LoginEmail) { errors.SigninErr.LoginEmail = \" Email Required \" }\r\n        else if (!emailRegex.test(values.LoginEmail)) { errors.SigninErr.LoginEmail = \"Please enter A valid email \" }\r\n\r\n        if (!values.LoginPassword) { errors.SigninErr.LoginPassword = \" Password Required \" }\r\n        else if (!passwordRegex.test(values.LoginPassword)) { errors.SigninErr.LoginPassword = \"Please Enter a valid Password  \" }\r\n\r\n\r\n        //{RegFName:\"\" , RegLName:\"\" , RegEmail :\"\" ,RegPassword:\"\", RegConfirmPass:\"\" ,RegPhoneNumber:\"\" , RegBirthday:\"\" , RegNationality:\"\" , RegAdress:\"\" , RegCity:\"\" } ; \r\n        if (!values.RegFName) { errors.RegisterErr.RegFName = \" Fullname required \" }\r\n        if (!values.RegLName) { errors.RegisterErr.RegLName = \" Lastname required \" }\r\n\r\n        if (!values.RegEmail) { errors.RegisterErr.RegEmail = \" Email required \" }\r\n        else if (!emailRegex.test(values.RegEmail)) { errors.RegisterErr.RegEmail = \" Enter a valid Email \" }\r\n\r\n        if (!values.RegPassword) { errors.RegisterErr.RegPassword = \"Password required \" }\r\n        else if (!passwordRegex.test(values.RegPassword)) { errors.RegisterErr.RegPassword = \" Enter a valid password \" }\r\n        else if (values.RegPassword !== values.RegConfirmPass) { errors.RegisterErr.RegConfirmPass = \"Passwords not matched \" }\r\n\r\n        if (!values.RegConfirmPass) { errors.RegisterErr.RegConfirmPass = \" Confirm Pass required \" }\r\n        if (!values.RegPhoneNumber) { errors.RegisterErr.RegPhoneNumber = \" Phone Number required \" }\r\n        if (!values.RegBirthday) { errors.RegisterErr.RegBirthday = \" Birthday required \" }\r\n        if (!values.RegNationality) { errors.RegisterErr.RegNationality = \" Nationality required \" }\r\n        if (!values.RegAdress) { errors.RegisterErr.RegAdress = \" Address  required \" }\r\n        if (!values.RegCity) { errors.RegisterErr.RegCity = \" City required \" }\r\n\r\n\r\n        setFormErrors(errors)\r\n        return errors;\r\n\r\n    }\r\n\r\n    const ErrorCatch = () => {\r\n        //setFormErrors(ValidationFun(Values));\r\n        return  ValidationFun(Values);\r\n    }\r\n\r\n    const handlechange = (e) => {\r\n        setValues({ ...Values, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const FindidLastElement = (url) => {\r\n        axios.get(`https://autowash-api.herokuapp.com/${url}`)\r\n            .then((res) => { setLastId(res.data.length + 1) })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            FindidLastElement(url);\r\n        }\r\n    }, [url])\r\n\r\n\r\n    function closeModal() {\r\n        document.body.style.overflowY=\"auto\";\r\n        setErrormModal(null);\r\n    }\r\n\r\n\r\n\r\n    const SendData = (ErrorObj) => {\r\n\r\n        //this RegisterErr must be changable depending on Which button you click \r\n        const Error = ValidationFun(Values)[ErrorObj];\r\n        const ErrorState = Object.keys(Error).length === 0 ? true : false;\r\n\r\n        if (ErrorState) {\r\n            const userInfo = EmailExist(Values.RegEmail)\r\n            if (!userInfo) {\r\n                axios({\r\n                    baseURL: \"https://autowash-api.herokuapp.com/\",\r\n                    url: url, method: \"post\",\r\n                    data: { id: lastid, data: Values, userToken: Token + Number(Values.RegPhoneNumber ? Values.RegPhoneNumber : 0) + lastid }})\r\n                    .then((res) => {\r\n                        setIssubmit(false);\r\n                        setValues(sentValues);\r\n                        alert(\"data sent successfully\");\r\n                    }).catch((err) => {\r\n                        setErrormModal(<DynamicModal header=\"Authentication Error \" message={err} closeModalFun={closeModal} />)\r\n                    })\r\n            }\r\n            else {\r\n\r\n                setErrormModal(<DynamicModal header=\"Authentication Error\" message=\" the email has been reigsted before try login \" closeModalFun={closeModal} />)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function LoginService() {\r\n\r\n        const Error = ValidationFun(Values).SigninErr;\r\n        const ErrorState = Object.keys(Error).length === 0 ? true : false;\r\n        if (ErrorState) {\r\n            var User = users?.filter((user) => {\r\n                return user.data.RegEmail === Values.LoginEmail && user.data.RegPassword === Values.LoginPassword })\r\n\r\n            if (User.length !== 0) {\r\n                localStorage.setItem(\"UserToken\", JSON.stringify(User[0].userToken))\r\n                dispatch(GetFetchedUser(User))\r\n                window.location.replace(\"/AutoWash\");\r\n            } else {\r\n                setErrormModal(<DynamicModal header=\"Authentication Error \" message=\" The Email or Password May Have Error  \" closeModalFun={closeModal} />)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /*\r\n        for (let i = 0; i < Users.length; i++) {\r\n\r\n            if (Values && Users ) {\r\n                console.log(Users)\r\n                console.log(Values)\r\n                if (Users[i].data.RegEmail === Values.LoginEmail && Users[i].data.RegPassword === Values.LoginPassword) {\r\n\r\n                    dispatch(GetFetchedUser(Users[i].data))\r\n                   //SetloggedUser(Users[i].data) ;\r\n                    //console.log(Users[i].data)\r\n                }\r\n                else{\r\n                    alert(\"email or Password didot Exist \")\r\n                }\r\n            }\r\n            else {\r\n                console.log(\" no data \")\r\n            }\r\n        }*/\r\n\r\n    }\r\n\r\n    return { Values, Formerrors, Issubmit, users, ErorrModal  ,  url  , setValues ,  LoginService, ErrorCatch, setFormErrors, setIssubmit, ValidationFun, SendData, handlechange }\r\n}","import './SocialmedialinksComponent.scss';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport styled from 'styled-components';\r\nconst Socialmedia = styled.div`\r\n    top:${ props => props.top}\r\n    \r\n    `\r\n\r\nexport default function SocialmedialinksComponent(props) {\r\n\r\n    const returneddata = props.socialmediaLinks;\r\n    //console.log(props.top)\r\n   // console.log(props.socialmediaLinks)\r\n\r\n    const returneddiv = returneddata?.map((res) => {\r\n        const {id  , icon , link } = res ; \r\n        return (\r\n            <a href={link} className='socialmedialink' key={id}>\r\n                <FontAwesomeIcon className='icon icon2' icon={[\"fab\", icon]} />\r\n            </a>\r\n        )\r\n    })\r\n    return (\r\n        <Socialmedia className='socialmediadiv' top={props.top}>\r\n            {\r\n                returneddiv\r\n            }\r\n        </Socialmedia>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\n\r\n\r\nexport class RegisterDataClass {\r\n\r\n    constructor(dataFromUser, destinationUrl, ErrorObject, Users) {\r\n\r\n        this.dataFromUser = dataFromUser;\r\n        this.destinationUrl = destinationUrl;\r\n        this.ErrorObject = ErrorObject;\r\n        this.Users = Users;\r\n        this.lastId = this.Users?.length + 1;\r\n    }\r\n\r\n    Users;\r\n    dataFromUser;\r\n    destinationUrl;\r\n    ErrorObject;\r\n    lastId;\r\n    baseURL = \"https://autowash-api.herokuapp.com/\";\r\n\r\n\r\n\r\n    Token = () => {\r\n        return (Math.floor(Math.random() * 1514000) + 1) + Number(this.dataFromUser.RegPhoneNumber ? this.dataFromUser.RegPhoneNumber : 0) + this.lastId;\r\n    };\r\n\r\n    ErrorStateFun = () => {\r\n        const Errors = Object.keys(this.ErrorObject).length === 0 ? false : true;\r\n        return Errors;\r\n    }\r\n\r\n    EmailExist = (InputEmail) => {\r\n        const val = this.Users.find((user) => {\r\n            if (user.data.RegEmail === InputEmail) {\r\n                console.log(\"Email exist from func hook\")\r\n                return true\r\n            }\r\n            else {\r\n                console.log(\"Email doesnot Exist from func hook \");\r\n                return false\r\n            }\r\n        })\r\n        console.log(val) //undefined if no user found here //user data if he found user with the sane data \r\n        return val;\r\n    }\r\n\r\n    RegisterUserData() {\r\n        if (!this.ErrorStateFun()) {\r\n            const UserInfo = this.EmailExist(this.dataFromUser.RegEmail);\r\n            if (!UserInfo) {\r\n                axios({\r\n                    baseURL: this.baseURL,\r\n                    data: { id: this.lastId, data: this.dataFromUser, userToken: this.Token() },\r\n                    url: this.destinationUrl,\r\n                    method: \"post\"\r\n                })\r\n                    .then((res) => {\r\n                        localStorage.setItem(\"Token\", res.data.userToken)\r\n                        window.location.replace(\"/AutoWash\")\r\n                    })\r\n\r\n            }\r\n            else {\r\n                return { Error: \"Auth Error\", Message: \" The Email have already exist , Try Sign in   \" }\r\n            }\r\n        }\r\n        else {\r\n            return { Error: \"Error Message \", Message: \" Error Found in the data you Entered \" }\r\n        }\r\n\r\n    }\r\n\r\n    RegisterUserLetterData() {\r\n        //console.log(this.dataFromUser)\r\n        if (!this.ErrorStateFun()) {\r\n            axios({ baseURL: this.baseURL, url: this.destinationUrl, method: \"post\", data: { data: this.dataFromUser } })\r\n            return { Error: \"\", Message: \" data sent successfuly\" }\r\n\r\n        }\r\n        else {\r\n            return { Error: \" Validation Error \", Message: \"please enter a valid data \" }\r\n        }\r\n    }\r\n\r\n    RegisterContactData() {\r\n        //console.log(this.dataFromUser);\r\n        if (!this.ErrorStateFun()) {\r\n            axios({ baseURL: this.baseURL, url: this.destinationUrl, method: \"post\", data: { data: this.dataFromUser } })\r\n            return { Error: \"\", Message: \" Message sent successfuly\" }\r\n        }\r\n        else {\r\n            return { Error: \" Validation Error \", Message: \"please enter a valid data \" }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import './Footercomponent.scss';\r\nimport React, { useLayoutEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport SocialmedialinksComponent from '../../DynmaicComponent/SocialmediaLinksComponent/SocialmedialinksComponent';\r\nimport FormInputComponent from '../../DynmaicComponent/FormInputComponent/FormInputComponent';\r\nimport MainButtonComponent from '../../DynmaicComponent/AppointmentButtonComponent/MainButtonComponent';\r\nimport UseValiationHook from '../../Hooks/CustomHookValidation';\r\nimport { useSelector } from 'react-redux';\r\nimport { createSelector }  from \"reselect\"\r\nimport { RegisterDataClass } from '../../Services/RegisterDataToApi';\r\nimport DynamicModal from '../../DynmaicComponent/DynamicModal/DynamicModal';\r\n\r\n\r\n\r\nconst dataSelector = createSelector(\r\n    (state)=>state.datareducer.data ,\r\n    (datafun)=>datafun\r\n) \r\n\r\nexport default function Footercomponent(props) {\r\n\r\n\r\n\r\n    const footerdata = { NewsFullname:\"\", NewsEmail:\"\" };\r\n    const url = \"newsletterRequests\";\r\n    const { Values, Formerrors, ErrorCatch , handlechange , setValues } = UseValiationHook(footerdata, url);\r\n    const top = \"0\"; \r\n    const {FooterData , SocialmediaData} =useSelector(dataSelector);\r\n    const [FooterDatadiv, SetFooterData] = useState(null);\r\n\r\n    const inputs = [\r\n        { id: 0, name: \"NewsFullname\", type: \"text\", placeholder: 'FullName', required: true, inputtype: \"textbox\" },\r\n        { id: 1, name: \"NewsEmail\", type: \"email\", placeholder: ' Email ', required: true, inputtype: \"textbox\" }\r\n    ];\r\n\r\n    const [ErrorModal , SetErrorModal]=useState() ; \r\n    const closeModalFun=()=>{\r\n        document.body.style.overflowY=\"auto\";\r\n        SetErrorModal(null);\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (FooterData && SocialmediaData) {\r\n            SetFooterData(\r\n                FooterData?.map((res) => {\r\n                    const {id , title , elements}=res ; \r\n                    return (\r\n                        <div key={id} className='footerelement'>\r\n                            <p className='headerofelement'> {title}   </p>\r\n                            {elements.map((result) => {\r\n                                const {id , link , icon , iconClassName , spanClassName , spantext}= result ; \r\n                                return (\r\n                                    <a key={id} href={link} className='linkelement'>\r\n                                        <FontAwesomeIcon icon={icon} className={iconClassName} />\r\n                                        <span className={spanClassName}> {spantext} </span>\r\n                                    </a>\r\n                                )\r\n                            })\r\n                            }\r\n                            {res.title === \"Get In Touch\" ? <SocialmedialinksComponent socialmediaLinks={SocialmediaData} top={top} /> : <> </>}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }, [FooterData, SocialmediaData])\r\n\r\n\r\n    function RegisterNewsLetterdataFun(){\r\n        const RegData = new RegisterDataClass(Values , url , ErrorCatch().NewsErr , null ) ;\r\n        const data = RegData.RegisterUserLetterData() ; \r\n        if(data){\r\n            SetErrorModal(<DynamicModal header={data.Error} message={data.Message}  closeModal={closeModalFun} />)\r\n        }\r\n        setValues(footerdata)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='footercontainer'>\r\n            {FooterDatadiv}\r\n            <div className='footerelement'>\r\n                <p className='headerofelement'> Newsletter  </p>\r\n                {\r\n                    inputs.map((res) => {\r\n                        return (<FormInputComponent key={res.id} {...res} value={Values[res.name]}  onChange={handlechange} errormessage={Formerrors.NewsErr[res.name]} />)\r\n                    })\r\n                }\r\n                <MainButtonComponent onclick={RegisterNewsLetterdataFun} child='Submit' font='#202C45' back='white' hoverfont=\"white\" hoverback=\"#E81C2E\" width=\"100%\" />\r\n                \r\n            </div>\r\n        </div>\r\n        {\r\n            ErrorModal ? ErrorModal:<></>\r\n        }\r\n\r\n        </>\r\n        \r\n    )\r\n\r\n}\r\n\r\n"],"sourceRoot":""}